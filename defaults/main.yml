# Default filesystem paths on CentOS 7
nginx_dir: '/etc/nginx'
nginx_certs_dir: '/etc/pki/tls/certs'
nginx_vim_syntax_dir: '/usr/share/vim/vimfiles'
nginx_dhparam_src_dir: 'secret' # relative directory to store dhparam files in

nginx_vim_syntax_url: 'http://hg.nginx.org/nginx/raw-file/tip/contrib/vim/'
nginx_repo_version: 'mainline' # Official nginx repo: 'stable' or 'mainline' (dev branch)

nginx_worker_processes: 'auto'
nginx_worker_connections: '1024'
nginx_multi_accept: 'on'
nginx_connection_processor: 'epoll'
nginx_keepalive_timeout: '30s'
nginx_server_tokens: 'off' # Security issue, don't need to hand out server version numbers
nginx_client_max_body_size: '100m' # maximum filesize allowed for file uploads

# Optimize how packets are sent
nginx_sendfile: 'on'
nginx_tcp_nopush: 'on'
nginx_tcp_nodelay: 'on'

# Compression settings
nginx_gzip: 'on'
nginx_gzip_vary: 'on'
nginx_gzip_proxied: 'any'
nginx_gzip_comp_level: '6'
nginx_gzip_min_length: '1000'
nginx_gzip_http_version: '1.1'
nginx_gzip_types: 'text/plain text/css text/xml text/javascript application/json application/javascript application/xml application/x-navimap image/svg+xml'

# Security settings
# 'Intermediate' recommendations from https://wiki.mozilla.org/Security/Server_Side_TLS
nginx_ssl_protocols: 'TLSv1 TLSv1.1 TLSv1.2'
nginx_ssl_prefer_server_ciphers: 'on'
nginx_ssl_session_cache: 'shared:SSL:50m'
nginx_ssl_session_timeout: '1d'
nginx_ssl_session_tickets: 'off'
nginx_ssl_ciphers: 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS'

# Need one Diffie-hellman param file for each keysize you are using in your certs (default is first in list)
# Filenames will be in the format dhparamKEYSIZE.pem, ex: dhparam2048.pem
nginx_dhparam_keysizes: ['2048']

nginx_default_ssl_config: |
  ssl_dhparam {{ nginx_certs_dir }}/dhparam{{ nginx_dhparam_keysizes[0] }}.pem;
  ssl_certificate {{ nginx_certs_dir }}/{{ ssl_certificate_filename }};
  ssl_certificate_key {{ nginx_certs_dir }}/{{ ssl_certificate_key_filename }};

nginx_default_http_headers: |
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN; # Prevent iframe embedding to avoid clickjacking

nginx_default_https_headers: |
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN; # Prevent iframe embedding to avoid clickjacking
  add_header Strict-Transport-Security max-age=15768000; # HSTS to prevent ssl_strip attacks

nginx_default_ocsp_stapling: |
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

nginx_default_http_listen: |
  listen 80;
  listen [::]:80;

nginx_default_https_listen: |
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

# Dictionary of all your nginx sites. Using the list nginx_sites_enabled[] in group_vars
# will let you enable specific sites out of this master list on different hosts
#
# Adapted from https://github.com/geerlingguy/ansible-role-nginx
#
# nginx_sites:
#   awesome_site:
#    server1: |
#      server_name www.example.com;
#      listen 80;
#      listen [::]:80;
#      return 301 https://$host$request_uri;
#    server2: |
#      server_name www.example.com;
#      listen 443 ssl http2;
#      listen [::]:443 ssl http2;
#      location / { try_files $uri $uri/ =404; }
#
#   other_site:
#    server1: |
#      server_name www.example2.com;
#      listen 443 ssl http2;
#      listen [::]:443 http2;
#      root /var/www/html/somesite;
#
#      {{ nginx_default_https_headers }}
#
#      ssl_dhparam {{ nginx_certs_dir }}/dhparam2048.pem;
#      ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
#      ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
#      ssl_trusted_certificate {{ nginx_certs_dir }}/ocsp-certs.pem; # contains root cert for oscp
#
#      {{ nginx_default_ocsp_stapling }}
#
#      location / { try_files $uri $uri/ =404; }
#
# nginx_sites_enabled: ['awesome_site', 'other_site']

nginx_sites: []
nginx_sites_enabled: []
