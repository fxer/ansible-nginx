# Ansible generated nginx.conf

user nginx;
worker_processes {{ nginx_worker_processes }};
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
	worker_connections {{ nginx_worker_connections }};
	multi_accept {{ nginx_multi_accept }};
	use {{ nginx_connection_processor }};
}

http {
	include         /etc/nginx/mime.types;
	default_type    application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
										'$status $body_bytes_sent "$http_referer" '
										'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log  main;

	index index.php index.html index.htm;

	keepalive_timeout {{ nginx_keepalive_timeout }};
	server_tokens {{ nginx_server_tokens }};
	client_max_body_size {{ nginx_client_max_body_size }};

	# Optimize how packets are sent
	sendfile {{ nginx_sendfile }};
	tcp_nopush {{ nginx_tcp_nopush }};
	tcp_nodelay {{ nginx_tcp_nodelay }};

	# Compression settings
	gzip                {{ nginx_gzip }};
	gzip_vary           {{ nginx_gzip_vary }};
	gzip_proxied        {{ nginx_gzip_proxied }};
	gzip_comp_level     {{ nginx_gzip_comp_level }};
	gzip_min_length     {{ nginx_gzip_min_length }};
	gzip_http_version   {{ nginx_gzip_http_version }};
	gzip_types {{ nginx_gzip_types }};

	# Security settings
	# Recommendations from https://wiki.mozilla.org/Security/Server_Side_TLS
	ssl_protocols {{ nginx_ssl_protocols }};
	ssl_prefer_server_ciphers {{ nginx_ssl_prefer_server_ciphers }};
	ssl_session_cache {{ nginx_ssl_session_cache }};
	ssl_session_timeout {{ nginx_ssl_session_timeout }};
	ssl_session_tickets {{ nginx_ssl_session_tickets }};
	ssl_ciphers {{ nginx_ssl_ciphers }};

	proxy_buffering     off;
	proxy_set_header    X-Real-IP $remote_addr;
	proxy_set_header    X-Forwarded-Proto $scheme;
	proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header    Host $http_host;

	# Proxy 'Upgrade' and 'Connection' headers if present to enable WebSockets
	proxy_set_header Connection $connection_upgrade;
	proxy_set_header Upgrade $http_upgrade;
	proxy_http_version 1.1;
	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}

	# Load modular configuration files from the /etc/nginx/conf.d directory.
	# See http://nginx.org/en/docs/ngx_core_module.html#include
	# for more information.
	include /etc/nginx/conf.d/*.conf;
}
